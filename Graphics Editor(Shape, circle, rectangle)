//Shape

package GraphicsIntro;

import java.awt.Color;
import java.awt.Graphics;

public abstract class Shape {

	protected int x, y, width, height;
	protected Color c;
	protected String type;
	
	public Shape(int x,int y, int w, int h, Color c) {
		this.x = x; this.y = y;
		width = w; height = h;
		this.c = c;
	}
	
	public void move(int x1, int y1, int x2, int y2) {
		x = x1+x2; 
		y = y1+y2;
	}
	
	public abstract Shape copy();
	public abstract void draw(Graphics g);
	public abstract boolean isOn(int x, int y);
	public abstract void resize(int x1, int y1, int x2, int y2);
	
}


//Circle

package GraphicsIntro;

import java.awt.Color;
import java.awt.Graphics;

public class Circle extends Shape{
	
	public Circle(int startx, int starty,int diameter,  Color c) {
		super(startx, starty, diameter, diameter, c);
		
		
		
	}
	
	public void draw(Graphics g) {
	
		g.setColor(c);
		g.fillOval(x-this.width/2, y-this.width/2, width, width);
	}	

	@Override
	public Shape copy() {
		// TODO Auto-generated method stub
		return new Circle(x, y, width, c);
	}

	@Override
	public boolean isOn(int x, int y) {
		
		//Pretty simple just uses the distance formula to make sure where I'm clicking
		//is withing the width from the center of the circle 
		if(Math.sqrt( (Math.pow(x-this.x,2 ))+(Math.pow(y-this.y, 2)) )<=width/2) {
			return true;
		}
		return false;
	}

	@Override
	public void resize(int x1, int y1, int x2, int y2) {
		//just sets the width to  the amount I'm dragging 
		width=(int) Math.sqrt( (Math.pow(x2-x1,2 ))+(Math.pow(y2-y1, 2)) );
		
	}

}


//Rectangle

package GraphicsIntro;

import java.awt.Color;
import java.awt.Graphics;

public class Rectangle extends Shape{
	
	public Rectangle(int width, int height, int startx, int starty, Color c) {
		super(width, height, startx, starty, c);
		
		
		
	}
	
	public void draw(Graphics g) {
	
		g.setColor(c);
		g.fillRect(x, y, width, height);
	}	

	@Override
	public Shape copy() {
		// TODO Auto-generated method stub
		return new Rectangle(x,y, width, height, c);
	}

	@Override
	public boolean isOn(int x, int y) {
		//Just a simple check if where I clicked was within this box 
		if(x>this.x && x<this.x+width && y>this.y && y<this.y+height) {
			return true;
		}
		return false;
	}

	@Override
	public void resize(int x1, int y1, int x2, int y2) {
		//its the same type of resize as the others, but you have to keep in mind
		//the times where its dragged up or to the left 
		
		//so here I check if that happens and then set the old x to the current x 
		//and then set the new x to the old x 
		if(x2<x1) {
			int temp = x1;
			x1 = x2;
			x2 = temp;
		}
		//Then just the same thing with the y's 
		if(y2<y1) {
			int temp = y1;
			y1 = y2;
			y2 = temp;
		}
		//and here is just the normal resize like the other shapes 
		x = x1;
		y = y1;
		width = x2-x1;
		height = y2-y1;
		

		
		
		
	}

}
